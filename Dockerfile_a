################### BUILD AND RUN THIS DOCKER FILE ############################
# cd into the pipeline-a directory

### BUILD IMAGE FROM root directory of project
# docker build -t icrsc/he-class-slide -f Dockerfile_a .

### TEST IMAGE
#singularity run --nv docker://icrsc/he-class-slide python -c "print('Hello World')"
# docker run -v ./data:/input -v ./output:/output icrsc/he-class-slide ./data ./output Y Y *o.ndpi

# singularity run -B ./data:/input -B ./output:/output docker://icrsc/he-class-slide ./data ./output Y Y *o.ndpi





### PUSH IMAGE TO DOCKER HUB
# docker push icrsc/he-class-slide
#################################################################################

FROM python:3.8

RUN mkdir /app
WORKDIR /app

RUN apt-get update -y
RUN apt-get install -y wget git unzip diffutils
RUN apt-get install -y gcc make autoconf automake cmake
RUN apt-get install -y pkg-config
RUN apt-get install -y libtool
#RUN apt-get install -y libjpeg-turbo-devel
    #Lmod gcc-c++        
    #zlib-devel\
    #glib2-devel\
    #cairo-devel\
    #gdk-pixbuf2-devel \
    #libxml2-devel\
    #sqlite-devel\
    #libtiff-devel libpng-devel \
    #libjpeg-turbo-devel libjpeg-turbo openjpeg2 openjpeg2-devel \
    #jasper-libs \
    #gtk3-devel \
    

# install JAVA
ENV JAVA_HOME=/app/jdk-20.0.2
ENV PATH=$JAVA_HOME/bin:$PATH
RUN wget -O jdk.tar.gz https://download.oracle.com/java/20/archive/jdk-20.0.2_linux-x64_bin.tar.gz
RUN tar zxvf jdk.tar.gz

# install openslide
# https://openslide.org/download/

RUN apt-get install -y openslide-tools

RUN pip install --upgrade pip
RUN pip install tifffile
RUN pip install javabridge
RUN pip install openslide-python
RUN pip install python-bioformats
RUN pip install certifi
RUN pip install future
RUN pip install imagecodecs
RUN pip install imagecodecs-lite
RUN pip install numpy
RUN pip install Pillow
RUN pip install scipy

COPY ./pipeline-a/code /app/code

ENTRYPOINT [ "python3","/app/code/calling_wrapper.py"]